{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/api/comment-extractor/youtube-extractor/youtube-extractor.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { websitePrefix } from \"../../../constants/api/api.constants\";\nimport Input from \"../../../components/input/input\";\nimport Button from \"../../../components/button/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setApiKey } from \"../../../redux/client/client.actions\";\nimport { setMediaId } from \"../../../redux/media/media.actions\";\nimport { startLoading, cancelLoading } from \"../../../redux/loading/loading.actions\";\nimport { setComments, setVideoInfo, setCreatorInfo } from \"../../../redux/media/media.actions\";\nimport { ButtonContainer } from \"./youtube-extractor.styles\";\nexport const youtubeExtractor = (mediaId, apiKey) => {\n  return axios({\n    url: websitePrefix + \"api/youtube_extractor/\" + mediaId + \"/\" + apiKey,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    mode: \"cors\"\n  });\n};\n\nconst YoutubeAPI = () => {\n  _s();\n\n  const {\n    mediaId\n  } = useSelector(state => state.mediaReducer);\n  const {\n    apiKey\n  } = useSelector(state => state.clientReducer);\n  const dispatch = useDispatch();\n\n  const onKeyChange = event => {\n    dispatch(setApiKey(event.target.value));\n  };\n\n  const onIdChange = event => {\n    dispatch(setMediaId(event.target.value));\n  };\n\n  const onButtonRequest = () => {\n    dispatch(startLoading());\n    youtubeExtractor(mediaId, apiKey).then(response => {\n      dispatch(setVideoInfo(response.data.video));\n      dispatch(setCreatorInfo(response.data.channel));\n      dispatch(setComments(JSON.parse(response.data.comments)));\n      dispatch(cancelLoading());\n    }).catch(error => {\n      dispatch(cancelLoading());\n      alert(\"Something went wrong, Recorded \" + error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"apiKey\",\n      type: \"text\",\n      label: \"API Key\",\n      value: apiKey,\n      inputChange: onKeyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"mediaId\",\n      type: \"text\",\n      label: \"Video ID\",\n      value: mediaId,\n      inputChange: onIdChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onButtonRequest,\n        label: \"Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(YoutubeAPI, \"ttE4r+Ay6HtozJQO2i2V2ZoZptE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = YoutubeAPI;\nexport default YoutubeAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeAPI\");","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/api/comment-extractor/youtube-extractor/youtube-extractor.js"],"names":["React","axios","websitePrefix","Input","Button","useDispatch","useSelector","setApiKey","setMediaId","startLoading","cancelLoading","setComments","setVideoInfo","setCreatorInfo","ButtonContainer","youtubeExtractor","mediaId","apiKey","url","method","headers","mode","YoutubeAPI","state","mediaReducer","clientReducer","dispatch","onKeyChange","event","target","value","onIdChange","onButtonRequest","then","response","data","video","channel","JSON","parse","comments","catch","error","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SACEC,YADF,EAEEC,aAFF,QAGO,wCAHP;AAIA,SACEC,WADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,oCAJP;AAKA,SAASC,eAAT,QAAgC,4BAAhC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnD,SAAOhB,KAAK,CAAC;AACXiB,IAAAA,GAAG,EAAEhB,aAAa,GAAG,wBAAhB,GAA2Cc,OAA3C,GAAqD,GAArD,GAA2DC,MADrD;AAEXE,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHE;AAIXC,IAAAA,IAAI,EAAE;AAJK,GAAD,CAAZ;AAMD,CAPM;;AASP,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEN,IAAAA;AAAF,MAAcV,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA/B;AACA,QAAM;AAAEP,IAAAA;AAAF,MAAaX,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACE,aAAlB,CAA9B;AACA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;;AAEA,QAAMsB,WAAW,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,QAAQ,CAACnB,SAAS,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAR;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIH,KAAD,IAAW;AAC5BF,IAAAA,QAAQ,CAAClB,UAAU,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CAAR;AACD,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC5BN,IAAAA,QAAQ,CAACjB,YAAY,EAAb,CAAR;AACAM,IAAAA,gBAAgB,CAACC,OAAD,EAAUC,MAAV,CAAhB,CACGgB,IADH,CACSC,QAAD,IAAc;AAClBR,MAAAA,QAAQ,CAACd,YAAY,CAACsB,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAb,CAAR;AACAV,MAAAA,QAAQ,CAACb,cAAc,CAACqB,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAf,CAAR;AACAX,MAAAA,QAAQ,CAACf,WAAW,CAAC2B,IAAI,CAACC,KAAL,CAAWL,QAAQ,CAACC,IAAT,CAAcK,QAAzB,CAAD,CAAZ,CAAR;AACAd,MAAAA,QAAQ,CAAChB,aAAa,EAAd,CAAR;AACD,KANH,EAOG+B,KAPH,CAOUC,KAAD,IAAW;AAChBhB,MAAAA,QAAQ,CAAChB,aAAa,EAAd,CAAR;AACAiC,MAAAA,KAAK,CAAC,oCAAoCD,KAArC,CAAL;AACD,KAVH;AAWD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,KAAK,EAAEzB,MAJT;AAKE,MAAA,WAAW,EAAEU;AALf;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,KAAK,EAAEX,OAJT;AAKE,MAAA,WAAW,EAAEe;AALf;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,eAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAkC,QAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDD;;GAAMV,U;UACgBhB,W,EACDA,W,EACFD,W;;;KAHbiB,U;AAmDN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { websitePrefix } from \"../../../constants/api/api.constants\";\nimport Input from \"../../../components/input/input\";\nimport Button from \"../../../components/button/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setApiKey } from \"../../../redux/client/client.actions\";\nimport { setMediaId } from \"../../../redux/media/media.actions\";\nimport {\n  startLoading,\n  cancelLoading,\n} from \"../../../redux/loading/loading.actions\";\nimport {\n  setComments,\n  setVideoInfo,\n  setCreatorInfo,\n} from \"../../../redux/media/media.actions\";\nimport { ButtonContainer } from \"./youtube-extractor.styles\";\n\nexport const youtubeExtractor = (mediaId, apiKey) => {\n  return axios({\n    url: websitePrefix + \"api/youtube_extractor/\" + mediaId + \"/\" + apiKey,\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    mode: \"cors\",\n  });\n};\n\nconst YoutubeAPI = () => {\n  const { mediaId } = useSelector((state) => state.mediaReducer);\n  const { apiKey } = useSelector((state) => state.clientReducer);\n  const dispatch = useDispatch();\n\n  const onKeyChange = (event) => {\n    dispatch(setApiKey(event.target.value));\n  };\n\n  const onIdChange = (event) => {\n    dispatch(setMediaId(event.target.value));\n  };\n\n  const onButtonRequest = () => {\n    dispatch(startLoading());\n    youtubeExtractor(mediaId, apiKey)\n      .then((response) => {\n        dispatch(setVideoInfo(response.data.video));\n        dispatch(setCreatorInfo(response.data.channel));\n        dispatch(setComments(JSON.parse(response.data.comments)));\n        dispatch(cancelLoading());\n      })\n      .catch((error) => {\n        dispatch(cancelLoading());\n        alert(\"Something went wrong, Recorded \" + error);\n      });\n  };\n\n  return (\n    <div>\n      <Input\n        name=\"apiKey\"\n        type=\"text\"\n        label=\"API Key\"\n        value={apiKey}\n        inputChange={onKeyChange}\n      />\n      <Input\n        name=\"mediaId\"\n        type=\"text\"\n        label=\"Video ID\"\n        value={mediaId}\n        inputChange={onIdChange}\n      />\n      <ButtonContainer>\n        <Button onClick={onButtonRequest} label=\"Query\" />\n      </ButtonContainer>\n    </div>\n  );\n};\n\nexport default YoutubeAPI;\n"]},"metadata":{},"sourceType":"module"}