{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { websitePrefix } from '../api-info';\nimport { startLoading, cancelLoading } from '../../redux/loading/loading.actions';\nimport { setComments } from '../../redux/media/media.actions';\nexport const youtubeExtractor = () => {\n  _s();\n\n  const {\n    mediaId\n  } = useSelector(state => state.mediaReducer);\n  const {\n    apiKey\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  dispatch(startLoading());\n  axios({\n    url: websitePrefix + 'api/youtube_extractor/' + mediaId + '/' + apiKey,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    mode: 'cors'\n  }).then(response => response.json()).then(comments => {\n    dispatch(setComments(comments));\n    dispatch(cancelLoading());\n  }).catch(error => {\n    dispatch(cancelLoading());\n    alert('Something went wrong');\n  });\n};\n\n_s(youtubeExtractor, \"ttE4r+Ay6HtozJQO2i2V2ZoZptE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/api/comment-extractor/comment-extractor.js"],"names":["axios","useSelector","useDispatch","websitePrefix","startLoading","cancelLoading","setComments","youtubeExtractor","mediaId","state","mediaReducer","apiKey","userReducer","dispatch","url","method","headers","mode","then","response","json","comments","catch","error","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,qCAA5C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAcP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACG,WAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAW,EAAAA,QAAQ,CAACT,YAAY,EAAb,CAAR;AACAJ,EAAAA,KAAK,CAAC;AACFc,IAAAA,GAAG,EAAEX,aAAa,GAAG,wBAAhB,GAA2CK,OAA3C,GAAqD,GAArD,GAA2DG,MAD9D;AAEFI,IAAAA,MAAM,EAAE,MAFN;AAGFC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHP;AAIFC,IAAAA,IAAI,EAAE;AAJJ,GAAD,CAAL,CAKGC,IALH,CAKQC,QAAQ,IACZA,QAAQ,CAACC,IAAT,EANJ,EAOEF,IAPF,CAOOG,QAAQ,IAAI;AACfR,IAAAA,QAAQ,CAACP,WAAW,CAACe,QAAD,CAAZ,CAAR;AACAR,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACH,GAVD,EAUGiB,KAVH,CAUSC,KAAK,IAAI;AACdV,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAmB,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,GAbD;AAcH,CAnBM;;GAAMjB,gB;UACWN,W,EACDA,W,EACFC,W","sourcesContent":["import axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { websitePrefix } from '../api-info'\nimport { startLoading, cancelLoading } from '../../redux/loading/loading.actions'\nimport { setComments } from '../../redux/media/media.actions'\n\nexport const youtubeExtractor = () => {\n    const { mediaId } = useSelector(state => state.mediaReducer);\n    const { apiKey } = useSelector(state => state.userReducer);\n    const dispatch = useDispatch();\n    dispatch(startLoading());\n    axios({\n        url: websitePrefix + 'api/youtube_extractor/' + mediaId + '/' + apiKey,\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        mode: 'cors',\n    }).then(response =>\n        response.json()\n    ).then(comments => {\n        dispatch(setComments(comments));\n        dispatch(cancelLoading());\n    }).catch(error => {\n        dispatch(cancelLoading());\n        alert('Something went wrong');\n    })\n}"]},"metadata":{},"sourceType":"module"}