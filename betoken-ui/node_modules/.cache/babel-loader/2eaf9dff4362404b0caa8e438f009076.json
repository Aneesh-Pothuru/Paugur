{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import axios from\"axios\";import{websitePrefix}from\"../../api-info\";import Input from\"../../../components/input/input\";import Button from\"../../../components/button/button\";import{useDispatch,useSelector}from\"react-redux\";import{setApiKey}from\"../../../redux/user/user.actions\";import{setMediaId}from\"../../../redux/media/media.actions\";import{startLoading,cancelLoading}from\"../../../redux/loading/loading.actions\";import{setComments,setVideoInfo,setCreatorInfo}from\"../../../redux/media/media.actions\";import{ButtonContainer}from\"./youtube-extractor.styles\";export var youtubeExtractor=function youtubeExtractor(mediaId,apiKey){return axios({url:websitePrefix+\"api/youtube_extractor/\"+mediaId+\"/\"+apiKey,method:\"POST\",headers:{\"Content-Type\":\"application/json\"},mode:\"cors\"});};var YoutubeAPI=function YoutubeAPI(){var _useSelector=useSelector(function(state){return state.mediaReducer;}),mediaId=_useSelector.mediaId;var _useSelector2=useSelector(function(state){return state.userReducer;}),apiKey=_useSelector2.apiKey;var dispatch=useDispatch();var onKeyChange=function onKeyChange(event){dispatch(setApiKey(event.target.value));};var onIdChange=function onIdChange(event){dispatch(setMediaId(event.target.value));};var onButtonRequest=function onButtonRequest(){dispatch(startLoading());youtubeExtractor(mediaId,apiKey).then(function(response){dispatch(setVideoInfo(response.data.video));dispatch(setCreatorInfo(response.data.channel));dispatch(setComments(JSON.parse(response.data.comments)));dispatch(cancelLoading());}).catch(function(error){dispatch(cancelLoading());alert(\"Something went wrong, Recorded \"+error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Input,{name:\"apiKey\",type:\"text\",label:\"API Key\",value:apiKey,inputChange:onKeyChange}),/*#__PURE__*/_jsx(Input,{name:\"mediaId\",type:\"text\",label:\"Video ID\",value:mediaId,inputChange:onIdChange}),/*#__PURE__*/_jsx(ButtonContainer,{children:/*#__PURE__*/_jsx(Button,{onClick:onButtonRequest,label:\"Query\"})})]});};export default YoutubeAPI;","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/api/comment-extractor/youtube-extractor/youtube-extractor.js"],"names":["React","axios","websitePrefix","Input","Button","useDispatch","useSelector","setApiKey","setMediaId","startLoading","cancelLoading","setComments","setVideoInfo","setCreatorInfo","ButtonContainer","youtubeExtractor","mediaId","apiKey","url","method","headers","mode","YoutubeAPI","state","mediaReducer","userReducer","dispatch","onKeyChange","event","target","value","onIdChange","onButtonRequest","then","response","data","video","channel","JSON","parse","comments","catch","error","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { websitePrefix } from \"../../api-info\";\nimport Input from \"../../../components/input/input\";\nimport Button from \"../../../components/button/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setApiKey } from \"../../../redux/user/user.actions\";\nimport { setMediaId } from \"../../../redux/media/media.actions\";\nimport {\n  startLoading,\n  cancelLoading,\n} from \"../../../redux/loading/loading.actions\";\nimport {\n  setComments,\n  setVideoInfo,\n  setCreatorInfo,\n} from \"../../../redux/media/media.actions\";\nimport { ButtonContainer } from \"./youtube-extractor.styles\";\n\nexport const youtubeExtractor = (mediaId, apiKey) => {\n  return axios({\n    url: websitePrefix + \"api/youtube_extractor/\" + mediaId + \"/\" + apiKey,\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    mode: \"cors\",\n  });\n};\n\nconst YoutubeAPI = () => {\n  const { mediaId } = useSelector((state) => state.mediaReducer);\n  const { apiKey } = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const onKeyChange = (event) => {\n    dispatch(setApiKey(event.target.value));\n  };\n\n  const onIdChange = (event) => {\n    dispatch(setMediaId(event.target.value));\n  };\n\n  const onButtonRequest = () => {\n    dispatch(startLoading());\n    youtubeExtractor(mediaId, apiKey)\n      .then((response) => {\n        dispatch(setVideoInfo(response.data.video));\n        dispatch(setCreatorInfo(response.data.channel));\n        dispatch(setComments(JSON.parse(response.data.comments)));\n        dispatch(cancelLoading());\n      })\n      .catch((error) => {\n        dispatch(cancelLoading());\n        alert(\"Something went wrong, Recorded \" + error);\n      });\n  };\n\n  return (\n    <div>\n      <Input\n        name=\"apiKey\"\n        type=\"text\"\n        label=\"API Key\"\n        value={apiKey}\n        inputChange={onKeyChange}\n      />\n      <Input\n        name=\"mediaId\"\n        type=\"text\"\n        label=\"Video ID\"\n        value={mediaId}\n        inputChange={onIdChange}\n      />\n      <ButtonContainer>\n        <Button onClick={onButtonRequest} label=\"Query\" />\n      </ButtonContainer>\n    </div>\n  );\n};\n\nexport default YoutubeAPI;\n"]},"metadata":{},"sourceType":"module"}