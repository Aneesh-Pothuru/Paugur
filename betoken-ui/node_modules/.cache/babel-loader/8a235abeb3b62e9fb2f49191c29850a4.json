{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/views/comment-extractor/comment-extractor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Logo from '../../components/logo/logo';\nimport Input from '../../components/input/input';\nimport Button from '../../components/button/button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setApiKey } from '../../redux/user/user.actions';\nimport { setMediaId } from '../../redux/media/media.actions';\nimport { startLoading, cancelLoading } from '../../redux/loading/loading.actions';\nimport { setComments } from '../../redux/media/media.actions';\nimport { youtubeExtractor } from '../../api/comment-extractor/youtube-extractor';\nimport './comment-extractor.css';\n\nconst CommentExtractor = () => {\n  _s();\n\n  const {\n    mediaId\n  } = useSelector(state => state.mediaReducer);\n  const {\n    apiKey\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n\n  const onKeyChange = event => {\n    dispatch(setApiKey(event.target.value));\n  };\n\n  const onIdChange = event => {\n    dispatch(setMediaId(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"apiKey\",\n      type: \"text\",\n      label: \"API Key\",\n      value: apiKey,\n      inputChange: onKeyChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"mediaId\",\n      type: \"text\",\n      label: \"Video ID\",\n      value: mediaId,\n      inputChange: onIdChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          dispatch(startLoading());\n          youtubeExtractor(mediaId, apiKey).then(response => {\n            response.json();\n          }).then(comments => {\n            dispatch(setComments(comments));\n            dispatch(cancelLoading());\n          }).catch(error => {\n            console.log(error);\n            dispatch(cancelLoading());\n            alert('Something went wrong');\n          });\n        },\n        label: \"Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentExtractor, \"ttE4r+Ay6HtozJQO2i2V2ZoZptE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CommentExtractor;\nexport default CommentExtractor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentExtractor\");","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/views/comment-extractor/comment-extractor.js"],"names":["React","Logo","Input","Button","useDispatch","useSelector","setApiKey","setMediaId","startLoading","cancelLoading","setComments","youtubeExtractor","CommentExtractor","mediaId","state","mediaReducer","apiKey","userReducer","dispatch","onKeyChange","event","target","value","onIdChange","then","response","json","comments","catch","error","console","log","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,qCAA5C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,gBAAT,QAAiC,+CAAjC;AACA,OAAO,yBAAP;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAcR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,WAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC3BF,IAAAA,QAAQ,CAACZ,SAAS,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIH,KAAD,IAAW;AAC1BF,IAAAA,QAAQ,CAACX,UAAU,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,KAAK,EAAEN,MAJX;AAKI,MAAA,WAAW,EAAEG;AALjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,KAAK,EAAEN,OAJX;AAKI,MAAA,WAAW,EAAEU;AALjB;AAAA;AAAA;AAAA;AAAA,YATJ,eAgBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnBL,UAAAA,QAAQ,CAACV,YAAY,EAAb,CAAR;AACAG,UAAAA,gBAAgB,CAACE,OAAD,EAAUG,MAAV,CAAhB,CAAkCQ,IAAlC,CAAuCC,QAAQ,IAAI;AAC/CA,YAAAA,QAAQ,CAACC,IAAT;AACH,WAFD,EAEGF,IAFH,CAEQG,QAAQ,IAAI;AAChBT,YAAAA,QAAQ,CAACR,WAAW,CAACiB,QAAD,CAAZ,CAAR;AACAT,YAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACH,WALD,EAKGmB,KALH,CAKSC,KAAK,IAAI;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAX,YAAAA,QAAQ,CAACT,aAAa,EAAd,CAAR;AACAuB,YAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,WATD;AAUH,SAZD;AAYG,QAAA,KAAK,EAAC;AAZT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA/CD;;GAAMpB,gB;UACkBP,W,EACDA,W,EACFD,W;;;KAHfQ,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport Logo from '../../components/logo/logo'\nimport Input from '../../components/input/input'\nimport Button from '../../components/button/button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setApiKey } from '../../redux/user/user.actions'\nimport { setMediaId } from '../../redux/media/media.actions'\nimport { startLoading, cancelLoading } from '../../redux/loading/loading.actions'\nimport { setComments } from '../../redux/media/media.actions'\nimport { youtubeExtractor } from '../../api/comment-extractor/youtube-extractor'\nimport './comment-extractor.css'\n\n\nconst CommentExtractor = () => {\n    const { mediaId } = useSelector(state => state.mediaReducer);\n    const { apiKey } = useSelector(state => state.userReducer);\n    const dispatch = useDispatch();\n\n    const onKeyChange = (event) => {\n        dispatch(setApiKey(event.target.value))\n    }\n\n    const onIdChange = (event) => {\n        dispatch(setMediaId(event.target.value))\n    }\n\n    return (\n        <div>\n            <Logo className=\"logo\" />\n            <Input\n                name='apiKey'\n                type=\"text\"\n                label=\"API Key\"\n                value={apiKey}\n                inputChange={onKeyChange}\n            />\n            <Input\n                name=\"mediaId\"\n                type=\"text\"\n                label=\"Video ID\"\n                value={mediaId}\n                inputChange={onIdChange}\n            />\n            <div className=\"center\">\n                <Button onClick={() => {\n                    dispatch(startLoading());\n                    youtubeExtractor(mediaId, apiKey).then(response => {\n                        response.json();\n                    }).then(comments => {\n                        dispatch(setComments(comments));\n                        dispatch(cancelLoading());\n                    }).catch(error => {\n                        console.log(error);\n                        dispatch(cancelLoading());\n                        alert('Something went wrong');\n                    })\n                }} label=\"Query\" />\n            </div>\n        </div>\n    )\n}\n\nexport default CommentExtractor;"]},"metadata":{},"sourceType":"module"}