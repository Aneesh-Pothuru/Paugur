{"ast":null,"code":"import _slicedToArray from\"/Users/aneeshpothuru/Documents/GitHubProjects/paugur/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from\"react\";import{YoutubeIcon,TwitterIcon,RedditIcon,AmazonIcon}from\"../media-icon/media-icon\";import{useDispatch}from\"react-redux\";import{MEDIA}from\"../../constants/media/media.constants\";import{setMediaYoutube,setMediaTwitter,setMediaReddit,setMediaAmazon}from\"../../redux/client/client.actions\";import{clearCreatorInfo,clearVideoInfo,clearMediaId,clearComments}from\"../../redux/media/media.actions\";import{PopUpContent,PreferanceContainer,MediaIconStyled}from\"./media-switch.styles\";export var SwitchPopUp=function SwitchPopUp(_ref){var toggle=_ref.toggle;var dispatch=useDispatch();var changePref=function changePref(media){toggle();dispatch(clearComments());dispatch(clearCreatorInfo());dispatch(clearMediaId());dispatch(clearVideoInfo());switch(media){case MEDIA.YOUTUBE:dispatch(setMediaYoutube());break;case MEDIA.TWITTER:dispatch(setMediaTwitter());break;case MEDIA.REDDIT:dispatch(setMediaReddit());break;case MEDIA.AMAZON:dispatch(setMediaAmazon());break;default:break;}};return/*#__PURE__*/_jsxs(PreferanceContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Choose Prefered Media\"}),/*#__PURE__*/_jsx(YoutubeIcon,{onClick:function onClick(){return changePref(MEDIA.YOUTUBE);}}),/*#__PURE__*/_jsx(TwitterIcon,{onClick:function onClick(){return changePref(MEDIA.TWITTER);}}),/*#__PURE__*/_jsx(RedditIcon,{onClick:function onClick(){return changePref(MEDIA.REDDIT);}}),/*#__PURE__*/_jsx(AmazonIcon,{onClick:function onClick(){return changePref(MEDIA.AMAZON);}})]});};var MediaSwitch=function MediaSwitch(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),switcher=_useState2[0],setSwitcher=_useState2[1];var toggleSwitch=function toggleSwitch(){setSwitcher(!switcher);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MediaIconStyled,{onClick:toggleSwitch}),/*#__PURE__*/_jsx(PopUpContent,{isOpen:switcher,onRequestClose:toggleSwitch,contentLabel:\"Change Media Preference\",ariaHideApp:false,style:{overlay:{backgroundColor:\"rgba(0, 0, 0, 0.25)\"}},children:/*#__PURE__*/_jsx(SwitchPopUp,{toggle:toggleSwitch})})]});};export default MediaSwitch;","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/paugur/src/components/media-switch/media-switch.js"],"names":["React","useState","YoutubeIcon","TwitterIcon","RedditIcon","AmazonIcon","useDispatch","MEDIA","setMediaYoutube","setMediaTwitter","setMediaReddit","setMediaAmazon","clearCreatorInfo","clearVideoInfo","clearMediaId","clearComments","PopUpContent","PreferanceContainer","MediaIconStyled","SwitchPopUp","toggle","dispatch","changePref","media","YOUTUBE","TWITTER","REDDIT","AMAZON","MediaSwitch","switcher","setSwitcher","toggleSwitch","overlay","backgroundColor"],"mappings":"mQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,WADF,CAEEC,WAFF,CAGEC,UAHF,CAIEC,UAJF,KAKO,0BALP,CAMA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,KAAsB,uCAAtB,CACA,OACEC,eADF,CAEEC,eAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,mCALP,CAMA,OACEC,gBADF,CAEEC,cAFF,CAGEC,YAHF,CAIEC,aAJF,KAKO,iCALP,CAMA,OACEC,YADF,CAEEC,mBAFF,CAGEC,eAHF,KAIO,uBAJP,CAMA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CACzC,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,GAAMgB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5BH,MAAM,GACNC,QAAQ,CAACN,aAAa,EAAd,CAAR,CACAM,QAAQ,CAACT,gBAAgB,EAAjB,CAAR,CACAS,QAAQ,CAACP,YAAY,EAAb,CAAR,CACAO,QAAQ,CAACR,cAAc,EAAf,CAAR,CACA,OAAQU,KAAR,EACE,IAAKhB,CAAAA,KAAK,CAACiB,OAAX,CACEH,QAAQ,CAACb,eAAe,EAAhB,CAAR,CACA,MACF,IAAKD,CAAAA,KAAK,CAACkB,OAAX,CACEJ,QAAQ,CAACZ,eAAe,EAAhB,CAAR,CACA,MACF,IAAKF,CAAAA,KAAK,CAACmB,MAAX,CACEL,QAAQ,CAACX,cAAc,EAAf,CAAR,CACA,MACF,IAAKH,CAAAA,KAAK,CAACoB,MAAX,CACEN,QAAQ,CAACV,cAAc,EAAf,CAAR,CACA,MACF,QACE,MAdJ,CAgBD,CAtBD,CAuBA,mBACE,MAAC,mBAAD,yBACE,6CADF,cAEE,KAAC,WAAD,EAAa,OAAO,CAAE,yBAAMW,CAAAA,UAAU,CAACf,KAAK,CAACiB,OAAP,CAAhB,EAAtB,EAFF,cAGE,KAAC,WAAD,EAAa,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACf,KAAK,CAACkB,OAAP,CAAhB,EAAtB,EAHF,cAIE,KAAC,UAAD,EAAY,OAAO,CAAE,yBAAMH,CAAAA,UAAU,CAACf,KAAK,CAACmB,MAAP,CAAhB,EAArB,EAJF,cAKE,KAAC,UAAD,EAAY,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAACf,KAAK,CAACoB,MAAP,CAAhB,EAArB,EALF,GADF,CASD,CAlCM,CAoCP,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,eACQ3B,QAAQ,CAAC,KAAD,CADhB,wCACjB4B,QADiB,eACPC,WADO,eAExB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBD,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAFD,CAGA,mBACE,oCACE,KAAC,eAAD,EAAiB,OAAO,CAAEE,YAA1B,EADF,cAEE,KAAC,YAAD,EACE,MAAM,CAAEF,QADV,CAEE,cAAc,CAAEE,YAFlB,CAGE,YAAY,CAAC,yBAHf,CAIE,WAAW,CAAE,KAJf,CAKE,KAAK,CAAE,CACLC,OAAO,CAAE,CACPC,eAAe,CAAE,qBADV,CADJ,CALT,uBAWE,KAAC,WAAD,EAAa,MAAM,CAAEF,YAArB,EAXF,EAFF,GADF,CAkBD,CAvBD,CAyBA,cAAeH,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  YoutubeIcon,\n  TwitterIcon,\n  RedditIcon,\n  AmazonIcon,\n} from \"../media-icon/media-icon\";\nimport { useDispatch } from \"react-redux\";\nimport { MEDIA } from \"../../constants/media/media.constants\";\nimport {\n  setMediaYoutube,\n  setMediaTwitter,\n  setMediaReddit,\n  setMediaAmazon,\n} from \"../../redux/client/client.actions\";\nimport {\n  clearCreatorInfo,\n  clearVideoInfo,\n  clearMediaId,\n  clearComments,\n} from \"../../redux/media/media.actions\";\nimport {\n  PopUpContent,\n  PreferanceContainer,\n  MediaIconStyled,\n} from \"./media-switch.styles\";\n\nexport const SwitchPopUp = ({ toggle }) => {\n  const dispatch = useDispatch();\n  const changePref = (media) => {\n    toggle();\n    dispatch(clearComments());\n    dispatch(clearCreatorInfo());\n    dispatch(clearMediaId());\n    dispatch(clearVideoInfo());\n    switch (media) {\n      case MEDIA.YOUTUBE:\n        dispatch(setMediaYoutube());\n        break;\n      case MEDIA.TWITTER:\n        dispatch(setMediaTwitter());\n        break;\n      case MEDIA.REDDIT:\n        dispatch(setMediaReddit());\n        break;\n      case MEDIA.AMAZON:\n        dispatch(setMediaAmazon());\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <PreferanceContainer>\n      <h1>Choose Prefered Media</h1>\n      <YoutubeIcon onClick={() => changePref(MEDIA.YOUTUBE)} />\n      <TwitterIcon onClick={() => changePref(MEDIA.TWITTER)} />\n      <RedditIcon onClick={() => changePref(MEDIA.REDDIT)} />\n      <AmazonIcon onClick={() => changePref(MEDIA.AMAZON)} />\n    </PreferanceContainer>\n  );\n};\n\nconst MediaSwitch = () => {\n  const [switcher, setSwitcher] = useState(false);\n  const toggleSwitch = () => {\n    setSwitcher(!switcher);\n  };\n  return (\n    <div>\n      <MediaIconStyled onClick={toggleSwitch} />\n      <PopUpContent\n        isOpen={switcher}\n        onRequestClose={toggleSwitch}\n        contentLabel=\"Change Media Preference\"\n        ariaHideApp={false}\n        style={{\n          overlay: {\n            backgroundColor: \"rgba(0, 0, 0, 0.25)\",\n          },\n        }}\n      >\n        <SwitchPopUp toggle={toggleSwitch} />\n      </PopUpContent>\n    </div>\n  );\n};\n\nexport default MediaSwitch;\n"]},"metadata":{},"sourceType":"module"}