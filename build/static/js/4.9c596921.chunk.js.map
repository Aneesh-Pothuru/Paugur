{"version":3,"sources":["api/api-info.js","redux/loading/loading.actions.js","assets/paugur.svg","components/logo/logo.styles.js","components/logo/logo.js","components/input/input.styles.js","components/input/input.js","components/button/button.styles.js","components/button/button.js","api/comment-extractor/youtube-extractor/youtube-extractor.styles.js","api/comment-extractor/youtube-extractor/youtube-extractor.js","redux/user/user.actions.js","redux/media/media.actions.js","api/comment-extractor/extractor.js","views/comment-extractor/comment-extractor.styles.js","views/comment-extractor/comment-extractor.js"],"names":["websitePrefix","startLoading","type","LOADING_APP_ACTIONS","START","payload","cancelLoading","FloatingContainer","styled","div","mainFocus","css","LogoContainer","img","props","isMainFocus","Logo","src","logo","alt","filledStyles","small","medium","large","Container","InputContainer","input","size","LabelContainer","label","Input","inputChange","properties","onChange","className","value","length","StyledButton","button","Button","ButtonContainer","YoutubeAPI","mediaId","useSelector","state","mediaReducer","apiKey","userReducer","dispatch","useDispatch","name","event","key","target","USER_API_KEY_ACTIONS","SET_KEY","id","MEDIA_SET_ACTIONS","MEDIA_ID","onClick","axios","url","method","headers","mode","youtubeExtractor","then","response","info","comments","data","video","VIDEO_INFO","CREATOR_INFO","setCreatorInfo","channel","JSON","parse","COMMENTS","catch","error","alert","Extractor","mediaPref","MEDIA","YOUTUBE","CommentExtractorContainer","CommentExtractor"],"mappings":"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","file":"static/js/4.9c596921.chunk.js","sourcesContent":["export const websitePrefix = \"http://127.0.0.1:5000/\";\n","import { LOADING_APP_ACTIONS } from \"./loading.types\";\n\nexport const startLoading = () => ({\n  type: LOADING_APP_ACTIONS.START,\n  payload: true,\n});\n\nexport const cancelLoading = () => ({\n  type: LOADING_APP_ACTIONS.START,\n  payload: false,\n});\n","export default __webpack_public_path__ + \"static/media/paugur.65210d63.svg\";","import styled, { css } from \"styled-components\";\n\nexport const FloatingContainer = styled.div`\n  animation-name: float;\n  animation-duration: 3s;\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-in-out;\n  @keyframes float {\n    0% {\n      transform: translate(0, 0px);\n    }\n    50% {\n      transform: translate(0, 15px);\n    }\n    100% {\n      transform: translate(0, -0px);\n    }\n  }\n`;\n\nconst mainFocus = css`\n  height: 25vmin;\n  padding-bottom: 20px;\n`;\n\nconst getLogoStyles = (props) => {\n  if (props.isMainFocus) {\n    return mainFocus;\n  } else {\n    return mainFocus;\n  }\n};\n\nexport const LogoContainer = styled.img`\n  ${getLogoStyles}\n`;\n","import React from \"react\";\nimport logo from \"../../assets/paugur.svg\";\nimport { FloatingContainer, LogoContainer } from \"./logo.styles\";\n\nconst Logo = ({ ...props }) => {\n  return (\n    <FloatingContainer>\n      <LogoContainer src={logo} alt=\"Paugur\" {...props} />\n    </FloatingContainer>\n  );\n};\n\nexport default Logo;\n","import styled, { css } from \"styled-components\";\n\nconst descriptionMainColor = \"white\";\nconst descriptionSubColor = \"gray\";\nconst userInputColor = \"black\";\n\nconst filledStyles = css`\n  top: -25px;\n  font-size: 18px;\n  color: ${descriptionMainColor};\n`;\n\nconst small = css`\n  width: 15%;\n`;\n\nconst medium = css`\n  width: 20%;\n`;\n\nconst large = css`\n  width: 35%;\n`;\n\nconst size = ({ size }) => {\n  switch (size) {\n    case \"small\":\n      return small;\n    case \"large\":\n      return large;\n    default:\n      return medium;\n  }\n};\n\nexport const Container = styled.div`\n  position: relative;\n  margin: 45px 0;\n\n  input[type=\"password\"] {\n    letter-spacing: 0.2em;\n  }\n`;\n\nexport const InputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${userInputColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 10px;\n  display: block;\n  ${size}\n  border: none;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 7px;\n  margin: 25px 0;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ~ label {\n    ${filledStyles}\n  }\n`;\n\nexport const LabelContainer = styled.label`\n  color: ${descriptionSubColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n\n  &.filled {\n    ${filledStyles}\n  }\n`;\n","import React from \"react\";\nimport { Container, InputContainer, LabelContainer } from \"./input.styles\";\n\nconst Input = ({ inputChange, label, ...properties }) => (\n  <Container>\n    <InputContainer onChange={inputChange} {...properties} />\n    {label ? (\n      <LabelContainer className={properties.value.length ? \"filled\" : \"\"}>\n        {label}\n      </LabelContainer>\n    ) : null}\n  </Container>\n);\n\nexport default Input;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  min-width: 100px;\n  height: 40px;\n  letter-spacing: 0.5px;\n  line-height: 35px;\n  padding: 0 15px 0 15px;\n  font-size: 15px;\n  background-color: #9836f6;\n  color: white;\n  font-weight: bolder;\n  border: 1px solid #011f30;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n\n  &:hover {\n    background-color: #6423a1;\n    color: white;\n    border: 1px solid #011f30;\n    transition: background-color 0.5s ease-out;\n  }\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./button.styles\";\n\nconst Button = ({ label, ...properties }) => {\n  return <StyledButton {...properties}>{label}</StyledButton>;\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { websitePrefix } from \"../../api-info\";\nimport Input from \"../../../components/input/input\";\nimport Button from \"../../../components/button/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setApiKey } from \"../../../redux/user/user.actions\";\nimport { setMediaId } from \"../../../redux/media/media.actions\";\nimport {\n  startLoading,\n  cancelLoading,\n} from \"../../../redux/loading/loading.actions\";\nimport {\n  setComments,\n  setVideoInfo,\n  setCreatorInfo,\n} from \"../../../redux/media/media.actions\";\nimport { ButtonContainer } from \"./youtube-extractor.styles\";\n\nexport const youtubeExtractor = (mediaId, apiKey) => {\n  return axios({\n    url: websitePrefix + \"api/youtube_extractor/\" + mediaId + \"/\" + apiKey,\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    mode: \"cors\",\n  });\n};\n\nconst YoutubeAPI = () => {\n  const { mediaId } = useSelector((state) => state.mediaReducer);\n  const { apiKey } = useSelector((state) => state.userReducer);\n  const dispatch = useDispatch();\n\n  const onKeyChange = (event) => {\n    dispatch(setApiKey(event.target.value));\n  };\n\n  const onIdChange = (event) => {\n    dispatch(setMediaId(event.target.value));\n  };\n\n  const onButtonRequest = () => {\n    dispatch(startLoading());\n    youtubeExtractor(mediaId, apiKey)\n      .then((response) => {\n        dispatch(setVideoInfo(response.data.video));\n        dispatch(setCreatorInfo(response.data.channel));\n        dispatch(setComments(JSON.parse(response.data.comments)));\n        dispatch(cancelLoading());\n      })\n      .catch((error) => {\n        dispatch(cancelLoading());\n        alert(\"Something went wrong, Recorded \" + error);\n      });\n  };\n\n  return (\n    <div>\n      <Input\n        name=\"apiKey\"\n        type=\"text\"\n        label=\"API Key\"\n        value={apiKey}\n        inputChange={onKeyChange}\n      />\n      <Input\n        name=\"mediaId\"\n        type=\"text\"\n        label=\"Video ID\"\n        value={mediaId}\n        inputChange={onIdChange}\n      />\n      <ButtonContainer>\n        <Button onClick={onButtonRequest} label=\"Query\" />\n      </ButtonContainer>\n    </div>\n  );\n};\n\nexport default YoutubeAPI;\n","import {\n  USER_API_KEY_ACTIONS,\n  USER_SET_MEDIA_PREF_ACTIONS,\n} from \"./user.types\";\nimport { MEDIA } from \"../../constants/media/media.constants\";\n\nexport const setApiKey = (key) => ({\n  type: USER_API_KEY_ACTIONS.SET_KEY,\n  payload: key,\n});\n\nexport const clearApiKey = () => ({\n  type: USER_API_KEY_ACTIONS.CLEAR_KEY,\n  payload: \"\",\n});\n\nexport const setMediaYoutube = () => ({\n  type: USER_SET_MEDIA_PREF_ACTIONS.YOUTUBE,\n  payload: MEDIA.YOUTUBE,\n});\n\nexport const setMediaTwitter = () => ({\n  type: USER_SET_MEDIA_PREF_ACTIONS.TWITTER,\n  payload: MEDIA.TWITTER,\n});\n\nexport const setMediaReddit = () => ({\n  type: USER_SET_MEDIA_PREF_ACTIONS.REDDIT,\n  payload: MEDIA.REDDIT,\n});\n\nexport const setMediaAmazon = () => ({\n  type: USER_SET_MEDIA_PREF_ACTIONS.AMAZON,\n  payload: MEDIA.AMAZON,\n});\n","import { MEDIA_SET_ACTIONS, MEDIA_CLEAR_ACTIONS } from \"./media.types\";\n\nexport const setComments = (comments) => ({\n  type: MEDIA_SET_ACTIONS.COMMENTS,\n  payload: comments,\n});\n\nexport const clearComments = () => ({\n  type: MEDIA_CLEAR_ACTIONS.COMMENTS,\n  payload: [],\n});\n\nexport const setMediaId = (id) => ({\n  type: MEDIA_SET_ACTIONS.MEDIA_ID,\n  payload: id,\n});\n\nexport const clearMediaId = () => ({\n  type: MEDIA_CLEAR_ACTIONS.MEDIA_ID,\n  payload: \"\",\n});\n\nexport const setCreatorInfo = (info) => ({\n  type: MEDIA_SET_ACTIONS.CREATOR_INFO,\n  payload: info,\n});\n\nexport const clearCreatorInfo = () => ({\n  type: MEDIA_CLEAR_ACTIONS.CREATOR_INFO,\n  payload: [],\n});\n\nexport const setVideoInfo = (info) => ({\n  type: MEDIA_SET_ACTIONS.VIDEO_INFO,\n  payload: info,\n});\n\nexport const clearVideoInfo = () => ({\n  type: MEDIA_CLEAR_ACTIONS.VIDEO_INFO,\n  payload: [],\n});\n","import React from \"react\";\nimport YoutubeAPI from \"./youtube-extractor/youtube-extractor\";\nimport { useSelector } from \"react-redux\";\nimport { MEDIA } from \"../../constants/media/media.constants\";\n\nconst Extractor = () => {\n  const { mediaPref } = useSelector((state) => state.userReducer);\n  switch (mediaPref) {\n    case MEDIA.YOUTUBE:\n      return <YoutubeAPI />;\n    default:\n      return <YoutubeAPI />;\n  }\n};\n\nexport default Extractor;\n","import styled from \"styled-components\";\n\nexport const CommentExtractorContainer = styled.div`\n  padding-top: 4vw;\n`;\n","import React from \"react\";\nimport Extractor from \"../../api/comment-extractor/extractor\";\nimport Logo from \"../../components/logo/logo\";\nimport { CommentExtractorContainer } from \"./comment-extractor.styles\";\n\nconst CommentExtractor = () => {\n  return (\n    <CommentExtractorContainer>\n      <Logo isMainFocus />\n      <Extractor />\n    </CommentExtractorContainer>\n  );\n};\n\nexport default CommentExtractor;\n"],"sourceRoot":""}